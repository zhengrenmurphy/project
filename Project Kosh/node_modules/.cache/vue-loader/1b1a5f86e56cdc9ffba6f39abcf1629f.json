{"remainingRequest":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/murphyren/Desktop/170/nn/final-project-team-peach/src/components/SignUpForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/src/components/SignUpForm.vue","mtime":1607460701436},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["SignUpForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SignUpForm.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"signup-form\">\n    <div class=\"signup-form-top\">\n      <input\n        class=\"name\"\n        style=\"margin-right: 20px; width: 90px;\"\n        v-model=\"firstName\"\n        placeholder=\"First Name\"\n      />\n      <input class=\"name\" style=\"width: 90px;\" v-model=\"lastName\" placeholder=\"Last Name\" />\n    </div>\n\n    <input v-model=\"username\" placeholder=\"Username\" />\n    <input v-model=\"password\" placeholder=\"Password\" />\n    <input v-model=\"email\" placeholder=\"Email\" />\n\n    <div class=\"business-input\">\n      <label for=\"checkbox\"> Signing up as a business? </label>\n      <input type=\"checkbox\" id=\"checkbox\" v-model=\"isBusiness\" />\n    </div>\n    <div v-if=\"isBusiness\">\n      <input\n        v-model=\"businessName\"\n        placeholder=\"Business Name\"\n        @input=\"onChange\"\n        style=\"margin-bottom:0px;\"\n      />\n      <ul v-show=\"isOpen\" class=\"autocomplete-results\">\n        <li v-for=\"(result, i) in busResults\" \n          :key=\"i\"\n          @click=\"setResult(result)\"\n          class=\"autocomplete-result\">\n            {{ result }}\n        </li>\n      </ul>\n    </div>\n    <form enctype=\"multipart/form-data\">\n      <label v-if=\"isBusiness\" for=\"files\">\n        Please upload a proof of ownership (PDF)</label\n      >\n    <input v-if=\"isBusiness\" type=\"file\" id=\"file\" ref=\"file\" @change=\"onSelect\" accept=\"image/.pdf\" />\n    </form>\n    <div class=\"signup-form-buttons\">\n      <button class=\"submit-signup\" style= \"margin-right: 10px;\" v-on:click=\"signUp\">Submit</button>\n      <router-link to=\"/login\">\n        <button class=\"cancel\">Cancel</button>\n      </router-link>\n    </div>\n\n    <div class=\"error-message\">\n      {{ error }}\n    </div>\n    <div class=\"success-message\">\n      {{ success }}\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"business-signup-form\",\n  data() {\n    return {\n      username: \"\",\n      password: \"\",\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      businessName: \"\",\n      error: \"\",\n      success: \"\",\n      isBusiness: false,\n      businessExists: false,\n      file: \"\",\n      isOpen: false,\n      busResults: []\n    };\n  },\n\n  methods: {\n    signUp: function () {\n      if (\n        this.username === \"\" ||\n        this.password === \"\" ||\n        this.firstName === \"\" ||\n        this.lastName === \"\" ||\n        this.email === \"\" ||\n        (this.isBusiness && this.businessName === \"\") ||\n        (this.isBusiness && !this.file)\n      ) {\n        this.error = \"You need to fill up all the entries to sign up!\";\n        this.clearMessages();\n      } else {\n        if (this.isBusiness) {\n          this.signUpBusiness();\n        } else {\n          this.signUpClient();\n        }\n      }\n    },\n    signUpBusiness: function () {\n      axios\n        .get(`/api/business/exist/${this.businessName}`, {})\n        .then((res) => {\n          this.businessExists = res.data;\n          this.alertClaim();\n        })\n        .catch((err) => {\n          console.log(err.response);\n        });\n    },\n    alertClaim: function () {\n      if (this.businessExists) {\n        axios\n          .get(`/api/business/claim/${this.businessName}`, {})\n          .then((res) => {\n            if (res.data) {\n              this.error = \"This business has already been claimed\";\n              this.resetForm();\n              this.clearMessages();\n            } else {\n              if (\n                confirm(\n                  `Are you sure you want to claim '${this.businessName}'?`\n                )\n              ) {\n                this.updateBusiness();\n              } else {\n                this.error = `You have not claimed '${this.businessName}'`;\n                this.clearMessages();\n              }\n            }\n          });\n      } else {\n        if (\n          confirm(\n            `Are you sure you want to create an account for '${this.businessName}'?`\n          )\n        ) {\n          this.updateBusiness();\n        } else {\n          this.error = `You have not created an account for '${this.businessName}'`;\n          this.clearMessages();\n        }\n      }\n    },\n    updateBusiness: function () {\n      const bodyContent = {\n        username: this.username,\n        password: this.password,\n        email: this.email,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        businessType: 1,\n      };\n      axios\n        .post(\"/api/clients\", bodyContent)\n        .then((res) => {\n          // handle success\n          this.success = res.data.message;\n          if (this.businessExists) {\n        axios.put(\"/api/business/claim\", { businessName: this.businessName });\n        axios\n          .put(\"/api/business/user\", {\n            businame: this.businessName,\n            username: this.username,\n          })\n          .then(() => {\n            const empty = JSON.stringify([]);\n\n            axios.post(\"/api/businessRes/add\", {\n              username: this.username,\n              businessName: this.businessName,\n              capacity: 0,\n              length: 30,\n              timeFrom: new Date(\n                `${new Date().toLocaleDateString()} 10:00:00 AM`\n              ).toLocaleString(),\n              timeTo: new Date(\n                `${new Date().toLocaleDateString()} 10:00:00 AM`\n              ).toLocaleString(),\n              monday: empty,\n              tuesday: empty,\n              wednesday: empty,\n              thursday: empty,\n              friday: empty,\n              saturday: empty,\n              sunday: empty,\n            }).then(()=> this.uploadFile());\n          });\n      } else {\n        axios\n          .post(`/api/business/`, {\n            username: this.username,\n            businame: this.businessName,\n          })\n          .then((res) => {\n            this.success = res.data.message;\n            const empty = JSON.stringify([]);\n\n            axios.post(\"/api/businessRes/add\", {\n              username: this.username,\n              businessName: this.businessName,\n              capacity: 0,\n              length: 30,\n              timeFrom: new Date(\n                `${new Date().toLocaleDateString()} 10:00:00 AM`\n              ).toLocaleString(),\n              timeTo: new Date(\n                `${new Date().toLocaleDateString()} 10:00:00 AM`\n              ).toLocaleString(),\n              monday: empty,\n              tuesday: empty,\n              wednesday: empty,\n              thursday: empty,\n              friday: empty,\n              saturday: empty,\n              sunday: empty,\n            }).then(()=> this.uploadFile());\n          })\n          .catch((err) => {\n            this.error = err.response.data.error;\n          })\n      }\n      \n\n        })\n        .catch((err) => {\n          // handle error\n          this.error = err.response.data.error;\n        });\n      \n    },\n    uploadFile: function () {\n      const formData = new FormData();\n      formData.append('file', this.file);\n      axios.post(`/api/business/file/${this.businessName}`, formData)\n      this.resetForm();\n      this.clearMessages();\n\n    },\n    onSelect: function(){\n      const selectedFile = this.$refs.file.files[0];\n      this.file = selectedFile;\n    },\n    signUpClient: function () {\n      const bodyContent = {\n        username: this.username,\n        password: this.password,\n        email: this.email,\n        firstName: this.firstName,\n        lastName: this.lastName,\n        businessType: 0,\n      };\n      axios\n        .post(\"/api/clients\", bodyContent)\n        .then((res) => {\n          // handle success\n          this.success = res.data.message;\n        })\n        .catch((err) => {\n          // handle error\n          this.error = err.response.data.error;\n        })\n        .then(() => {\n          // always executed\n          this.resetForm();\n          this.clearMessages();\n        });\n    },\n    setResult: function(result){\n        this.businessName = result;\n        this.isOpen = false;\n    },\n    onChange: function(){\n        if (this.businessName == \"\") {\n            this.isOpen = false;\n        } else {\n            this.isOpen = true;\n            axios\n                .get(`/api/business/search/${this.businessName}`)\n                .then((res) => {\n                    this.busResults = res.data.map(business => business.businessName);\n                })\n                .catch(() => {})\n        }\n    },\n\n    resetForm: function () {\n      this.username = \"\";\n      (this.password = \"\"),\n        (this.firstName = \"\"),\n        (this.lastName = \"\"),\n        (this.email = \"\"),\n        (this.businessName = \"\");\n    },\n    clearMessages: function () {\n      setTimeout(() => {\n        this.error = \"\";\n        if (this.success != \"\") {\n          if (!this.businessExists) {\n            this.$router.push(\"/login\");\n          } else {\n            this.$router.push(\"/login\");\n          }\n          this.success = \"\";\n          this.businessExists = false;\n        }\n      }, 2000);\n    },\n  },\n};\n</script>\n\n<style scoped>\n\nbutton {\n  margin: 0;\n}\n\n\ninput {\n  border: 1px solid black;\n  width: 200px;\n  height: 30px;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\nlabel {\n  font-weight: 100;\n  margin-top: 5px;\n  margin-right: 10px;\n}\ninput[type=\"checkbox\"] {\n  width: 20px;\n  height: 20px;\n}\ninput[type=\"file\"] {\n  border: none;\n  margin-top: 20px;\n}\n\n\n\n</style>"]}]}