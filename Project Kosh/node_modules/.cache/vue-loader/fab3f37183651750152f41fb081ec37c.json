{"remainingRequest":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/murphyren/Desktop/170/nn/final-project-team-peach/src/views/MakeResTableView.vue?vue&type=style&index=0&id=a96b68ca&scoped=true&lang=css&","dependencies":[{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/src/views/MakeResTableView.vue","mtime":1607371836709},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/murphyren/Desktop/170/nn/final-project-team-peach/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKbGFiZWx7CiAgICBkaXNwbGF5OiBmbGV4OyAKICAgIGp1c3RpZnktY29udGVudDogbGVmdDsKICAgIG1hcmdpbi1ib3R0b206IDMwcHg7CiAgICBwYWRkaW5nLWxlZnQ6IDIwJTsKfQoKaDF7CiAgICBwYWRkaW5nLWxlZnQ6IDIwJTsKCiAgICBjb2xvcjogI2Y1YzE5ZTsKICAgIGRpc3BsYXk6IGZsZXg7IAogICAganVzdGlmeS1jb250ZW50OiBsZWZ0OwogICAgbWFyZ2luLWJvdHRvbTogMHB4OwogICAgZm9udC1mYW1pbHk6IEhlbHZldGljYSwgc2Fucy1zZXJpZjsKfQo="},{"version":3,"sources":["MakeResTableView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwKA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"MakeResTableView.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <NavBar />\n    <BackBar :last=\"'Home'\"/>\n    <div class='main-makeRes'> \n        <h1> {{ businessName }}</h1>\n        <div v-if=\"!empty\">\n          <label>You can reserve up to {{maxRes}} slots a week.</label>\n        </div>\n        <div v-else>\n          <label>No reservations available.</label>\n        </div>\n        <ReservationTable :time_from=\"time_from\" :timeslot_length=\"timeslot_length\" :time_to=\"time_to\" :monday=\"monday\" :tuesday=\"tuesday\" :wednesday=\"wednesday\" :thursday=\"thursday\" :friday=\"friday\" :saturday=\"saturday\" :sunday=\"sunday\" :maxRes=\"maxRes\"/>\n    </div>\n    <div class=\"error-message\">\n      {{ error }}\n    </div>\n    <div class='buttons' v-if=\"monday.length\">\n      <button class=\"submit\" v-on:click=\"submit\">Submit</button>\n      <router-link to=\"/\">\n        <button class=\"cancel\" v-on:click=\"cancel\">Cancel</button>\n      </router-link>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport ReservationTable from '../components/ReservationTable.vue'\nimport NavBar from \"../components/Navbar.vue\";\nimport BackBar from \"../components/BackBar\"\nimport axios from \"axios\";\n\nexport default {\n  name: \"MakeResTableView\",\n  components: {\n    ReservationTable,\n    NavBar, \n    BackBar\n  },\n  data(){\n      return {\n        businessName: this.$cookie.get(\"reservation-table\"),\n        time_from: new Date(),\n        time_to: new Date(),\n        timeslot_length: 30,\n        monday: [],\n        tuesday: [],\n        wednesday: [],\n        thursday: [],\n        friday: [],\n        saturday: [],\n        sunday: [],\n        maxRes: 10,\n        timeslots: [],\n        empty: false,\n        error: ''\n      }\n\n  },\n\n  mounted: async function(){\n    const reservationTableInfo = await this.getReservationTable();\n    if(!this.empty){\n      this.time_from = new Date(reservationTableInfo.timeFrom);\n      this.time_to = new Date(reservationTableInfo.timeTo);\n      this.timeslots = this.getTimeSlots()\n      this.maxRes = reservationTableInfo.capacity;\n      this.timeslot_length = reservationTableInfo.length;\n\n      const empty = [] \n      for(let i = 0; i<JSON.parse(reservationTableInfo.monday).length; i++){\n        empty.push(0)\n      }\n\n      this.monday = [...empty];\n      this.$cookie.set(\"monday-checked\", [...empty])\n      this.tuesday = [...empty];\n      this.$cookie.set(\"tuesday-checked\", [...empty])\n      this.wednesday = [...empty];\n      this.$cookie.set(\"wednesday-checked\", [...empty])\n      this.thursday = [...empty];\n      this.$cookie.set(\"thursday-checked\", [...empty])\n      this.friday = [...empty];\n      this.$cookie.set(\"friday-checked\", [...empty])\n      this.saturday = [...empty];\n      this.$cookie.set(\"saturday-checked\", [...empty])\n      this.sunday = [...empty];\n      this.$cookie.set(\"sunday-checked\", [...empty])\n    }\n  },\n  \n  methods: {\n      addDays: function(today, days) {\n        const dayMap = {\n          0: days + 1,\n          1: days,\n          2: days - 1,\n          3: days - 2,\n          4: days - 3,\n          5: days - 4,\n          6: days - 5,\n        }\n        let date = today;\n        date.setDate(date.getDate() + dayMap[date.getDay()]);\n        return date.toLocaleString();\n      },\n      getTimeSlots(){\n        let times = [];\n        let i = 0;\n        let current = this.time_from\n        while((current.toLocaleTimeString() !== this.time_to.toLocaleTimeString()) || current.getTime() < this.time_to.getTime()){\n            current = new Date(this.time_from.getTime() + this.timeslot_length*i*60000)\n            times.push(current.toLocaleTimeString())\n            i++;\n        }\n        return times\n\n      },\n      getReservationTable: function(){\n        return axios.get(`/api/businessRes/client/${this.businessName}`)\n        .then((res) => {\n            return res.data\n        })\n        .catch(()=>{\n          this.empty = true\n        })\n      },\n      submit:function(){\n        // submit client's reservations\n        const selected = []\n        const today = new Date();\n        const days = ['MON', 'TUE', 'WED', 'THUR', 'FRI', 'SAT', 'SUN']\n        const weekMap = {\n            'MON': this.monday,\n            'TUE': this.tuesday,\n            'WED': this.wednesday,\n            'THUR': this.thursday,\n            'FRI': this.friday,\n            'SAT': this.saturday,\n            'SUN': this.sunday\n        }\n        days.forEach((day, index) => {\n          weekMap[day].forEach((checked, ind) => {\n            if(checked === 1 | checked){\n               selected.push(this.addDays(new Date(`${today.toLocaleDateString()} ${this.timeslots[ind]}`), index))\n            }\n          })\n        })\n        if (selected.length === 0) {\n          this.error = \"You must select a reservation time!\";\n        } else {\n          const bodyContent = { time: selected, businessName: this.businessName };\n          axios\n            .post(`/api/clientRes/add`, bodyContent)\n            .then(() => {\n              this.$router.push(\"/client/reservations\")\n            })\n        }\n      },\n      cancel: function(){\n        this.$router.push(\"/\")\n      }\n  }\n};\n</script>\n\n<style scoped>\n    label{\n        display: flex; \n        justify-content: left;\n        margin-bottom: 30px;\n        padding-left: 20%;\n    }\n\n    h1{\n        padding-left: 20%;\n\n        color: #f5c19e;\n        display: flex; \n        justify-content: left;\n        margin-bottom: 0px;\n        font-family: Helvetica, sans-serif;\n    }\n</style>\n"]}]}